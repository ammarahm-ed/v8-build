name: android sdk release

on: workflow_dispatch

jobs:
  android-release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Download Source
        uses: actions/checkout@v4.2.2

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: prepare cipd
        run: |
            mkdir -p ${GITHUB_WORKSPACE}/v8
            cd ${GITHUB_WORKSPACE}/v8
            git clone https://chromium.googlesource.com/chromium/tools/depot_tools
            export PATH=$PATH:${GITHUB_WORKSPACE}/v8/depot_tools
            echo "${GITHUB_WORKSPACE}/v8/depot_tools" >> $GITHUB_PATH
  
      - name: download v8
        run: |
            cd ${GITHUB_WORKSPACE}/v8
            fetch v8
            echo "target_os = ['android']" >> .gclient
            cd v8
            git checkout 13.6.81
            gclient sync
            ./build/install-build-deps.sh --android --arm --lib32
            echo "${GITHUB_WORKSPACE}/v8/v8/third_party/depot_tools" >> $GITHUB_PATH
            pushd build
            git apply $GITHUB_WORKSPACE/build.patch
            popd
            git apply $GITHUB_WORKSPACE/v8.patch
            # cp ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.5/lib/linux/aarch64/libunwind.a ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/
            # cp ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.5/lib/linux/arm/libunwind.a ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/
            # cp ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.5/lib/linux/i386/libunwind.a ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/i686-linux-android/
            # cp ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/12.0.5/lib/linux/x86_64/libunwind.a ./third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/
            
      - name: build v8 arm64
        run: |
            cd ${GITHUB_WORKSPACE}/v8/v8
            gn gen out/arm64 --args='
              v8_use_libm_trig_functions = false
              v8_enable_i18n_support = false
              v8_use_external_startup_data = false
              v8_enable_snapshot_compression = false
              v8_enable_pointer_compression = false
              v8_enable_pointer_compression_8gb = false
              v8_use_zlib = false
              v8_monolithic=true
              v8_static_library=true
              v8_enable_webassembly=true
              default_min_sdk_version = 21
              android_ndk_major_version = 21
              target_os = "android"
              target_cpu = "arm64"
              is_component_build = false
              use_custom_libcxx = false
              libcxx_is_shared = false
              is_debug = false
              symbol_level = 0'
            ninja -C out/arm64 -j4 v8

      # - name: build v8 arm32
      #   run: |
      #       cd ${GITHUB_WORKSPACE}/v8/v8
      #       gn gen out/arm32 --args='
      #         v8_use_libm_trig_functions = false
      #         v8_enable_i18n_support = false
      #         v8_use_external_startup_data = false
      #         v8_enable_snapshot_compression = false
      #         v8_enable_pointer_compression = false
      #         v8_enable_pointer_compression_8gb = false
      #         v8_use_zlib = false
      #         v8_monolithic=true
      #         default_min_sdk_version = 21
      #         android_ndk_major_version = 21
      #         target_os = "android"
      #         target_cpu = "arm"
      #         is_component_build = false
      #         use_custom_libcxx = false
      #         libcxx_is_shared = false
      #         is_debug = false
      #         symbol_level = 0'
      #       ninja -C out/arm32 -j4 v8
  
      # - name: build v8 x86
      #   run: |
      #       cd ${GITHUB_WORKSPACE}/v8/v8
      #       gn gen out/x86 --args='
      #         v8_use_libm_trig_functions = false
      #         v8_enable_i18n_support = false
      #         v8_use_external_startup_data = false
      #         v8_enable_snapshot_compression = false
      #         v8_enable_pointer_compression = false
      #         v8_enable_pointer_compression_8gb = false
      #         v8_use_zlib = false
      #         v8_monolithic=true
      #         default_min_sdk_version = 21
      #         android_ndk_major_version = 21
      #         target_os = "android"
      #         target_cpu = "x86"
      #         is_component_build = false
      #         use_custom_libcxx = false
      #         libcxx_is_shared = false
      #         is_debug = false
      #         symbol_level = 0'
      #       ninja -C out/x86 -j4 v8

      # - name: build v8 x64
      #   run: |
      #       cd ${GITHUB_WORKSPACE}/v8/v8
      #       gn gen out/x64 --args='
      #         v8_use_libm_trig_functions = false
      #         v8_enable_i18n_support = false
      #         v8_use_external_startup_data = false
      #         v8_enable_snapshot_compression = false
      #         v8_enable_pointer_compression = false
      #         v8_enable_pointer_compression_8gb = false
      #         v8_use_zlib = false
      #         v8_monolithic=true
      #         default_min_sdk_version = 21
      #         android_ndk_major_version = 21
      #         target_os = "android"
      #         target_cpu = "x64"
      #         is_component_build = false
      #         use_custom_libcxx = false
      #         libcxx_is_shared = false
      #         is_debug = false
      #         symbol_level = 0'
      #       ninja -C out/x64 -j4 v8
  
      # - name: Get all v8 android libs
      #   run: |
      #       mkdir -p Android/v8so/libs/arm64-v8a
      #       mkdir -p Android/v8so/libs/armeabi-v7a
      #       mkdir -p Android/v8so/libs/x86
      #       mkdir -p Android/v8so/libs/
      #       cp ${GITHUB_WORKSPACE}/v8/v8/out/arm64/lib*.so Android/v8so/libs/arm64-v8a/
      #       cp ${GITHUB_WORKSPACE}/v8/v8/out/arm32/lib*.so Android/v8so/libs/armeabi-v7a/
      #       cp ${GITHUB_WORKSPACE}/v8/v8/out/x86/lib*.so Android/v8so/libs/x86/
      #       cp ${GITHUB_WORKSPACE}/v8/v8/out/x64/lib*.so Android/v8so/libs/x86_64/

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: v8_monolithic
          path: ${GITHUB_WORKSPACE}/v8/v8/out
